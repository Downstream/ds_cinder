#pragma once
#ifndef DS_MODEL_AUTOGENERATED_Filterable
#define DS_MODEL_AUTOGENERATED_Filterable

#include <ds/data/resource.h>
#include <memory>
#include <vector>
#include <cinder/Vector.h>

#include "filterableexxontag_model.h"


namespace ds {
namespace model{




/**
* \class ds::model::FilterableRef
*			Auto-generated data model for Filterable
*/
class FilterableRef {
public:

	FilterableRef();

	const unsigned int& getId() const;
	const int& getCountryId() const;
	const int& getRegionId() const;
	const int& getCityId() const;
	const int& getYear() const;
	const float& getLongitude() const;
	const float& getLatitude() const;
	const std::vector<FilterableExxonTagRef>& getFilterableExxonTagRef() const;


	FilterableRef& setId(const unsigned int& Id);
	FilterableRef& setCountryId(const int& CountryId);
	FilterableRef& setRegionId(const int& RegionId);
	FilterableRef& setCityId(const int& CityId);
	FilterableRef& setYear(const int& Year);
	FilterableRef& setLongitude(const float& Longitude);
	FilterableRef& setLatitude(const float& Latitude);
	FilterableRef& setFilterableExxonTagRef(const std::vector<FilterableExxonTagRef>& FilterableExxonTagRef);



private:
	class Data;
	std::shared_ptr<Data>	mData;
};

} // namespace model
} // namespace ds

#endif
